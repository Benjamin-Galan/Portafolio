/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:rgba(0,0,0,0)}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-size:62.5%;box-sizing:border-box;scroll-padding-top:0rem}*,*:before,*:after{box-sizing:inherit}body{font-family:"Montserrat",sans-serif;font-optical-sizing:auto;font-style:normal;color:#060606;font-size:2rem}p{color:#060606;line-height:1.5}.contenedor{width:95%;max-width:90rem;margin:0 auto}a{text-decoration:none}h1,h2,h3{margin:0 0 5rem 0;font-weight:900}h1{font-size:4rem}h2{font-size:4.6rem}h3{font-size:6rem;text-align:center}img{max-width:100%;width:100%;height:auto;display:block}body>section{padding:9rem 0}.dark-mode{background-color:#1b1c1d}.dark-mode .header{background-color:#1b1c1d}.dark-mode .header nav a{color:#fff}.dark-mode .header h1{color:#fff}.dark-mode .header .mobile-menu{filter:invert(100%)}.dark-mode .presentacion p{color:#fff}.dark-mode .proyectos h2,.dark-mode .proyectos p{color:#fff}.dark-mode .proyectos h3{color:#eee041;font-weight:800}.dark-mode .about h2,.dark-mode .about p{color:#fff}.dark-mode .contact h2,.dark-mode .contact label{color:#fff}.dark-mode .contact p{color:#eee041;font-weight:600}.dark-mode .contact img{filter:invert(100%)}.dark-mode .presentacion ul,.dark-mode .presentacion a,.dark-mode .proyectos ul,.dark-mode .proyectos a{filter:invert(100%)}.header{background-color:#fff}@media(min-width: 768px){.header.fixed{position:fixed;left:0;top:0;width:100%;box-shadow:.1rem .2rem .3rem}}.header .contenido-header{padding:2rem;display:flex;flex-direction:column;align-items:center}@media(min-width: 768px){.header .contenido-header{display:flex;flex-direction:row;justify-content:space-between;align-items:center}}.header h1{color:#060606;font-size:3rem;text-align:center;margin:0}.header h1:hover{cursor:pointer}.navegacion-principal{visibility:hidden;opacity:0;max-height:0;transition:visibility .3s ease-in-out,opacity .3s linear,max-height .3s ease-out;display:flex;align-items:center;gap:2rem;flex-direction:column}@media(min-width: 768px){.navegacion-principal{flex-direction:row;opacity:1;visibility:visible}}.navegacion-principal a{color:#060606;font-size:2.4rem;font-size:2rem;transition:.3s}.navegacion-principal a:hover,.navegacion-principal a.active{font-weight:600}@media(min-width: 768px){.mobile-menu{display:none}}.mobile-menu img{width:5rem}.mostrar{visibility:visible;opacity:1;max-height:900px}.presentacion{width:95%;max-width:90rem;margin:0 auto}.contenido-presentacion{display:flex;flex-direction:column;align-items:center;text-align:center}@media(min-width: 768px){.contenido-presentacion{flex-direction:row;gap:5rem;text-align:left}}.contenido-presentacion .perfil-img{width:200px;height:200px;border-radius:50%;margin-bottom:3rem}@media(min-width: 768px){.contenido-presentacion .perfil-img{width:300px;height:300px}}.contenido-presentacion h2{font-size:3rem;color:#0a7baf;margin-bottom:3.5rem}.contenido-presentacion p{margin-bottom:2rem}.contenido-presentacion p:nth-child(1){font-weight:600}.presentacion-enlaces{display:flex;gap:3rem;justify-content:center}@media(min-width: 768px){.presentacion-enlaces{justify-content:flex-start}}.presentacion-enlaces a{display:flex;align-items:center;gap:1rem;border:1px solid #1b1c1d;border-radius:2rem;padding:.5rem 1rem;color:#060606;transition:.3s}.presentacion-enlaces a:hover{background-color:#1b1c1d;color:#fff;transition:.3s}.presentacion-enlaces a:hover img,.presentacion-enlaces a:hover p{filter:invert(100%)}.presentacion-enlaces a img{width:24px;height:24px}.proyectos{width:95%;max-width:90rem;margin:0 auto}.proyectos .contenedor-proyectos{display:grid;grid-template-rows:repeat(2, 1fr);gap:3rem}.contenido-proyectos{display:grid}@media(min-width: 768px){.contenido-proyectos{grid-template-columns:repeat(2, 1fr);gap:5rem}}.contenido-proyectos p{font-size:1.8rem}.contenido-proyectos img{border-radius:1rem}.proyecto-info h3{text-align:left;font-size:2.5rem;margin:1.5rem 0 1.5rem 0}@media(min-width: 768px){.proyecto-info h3{margin:0 0 1.5rem 0}}.proyecto-info ul{margin:0;padding:0}.proyecto-info ul li{list-style:none}.proyecto-stack{display:flex;gap:3rem}.proyecto-stack img{width:40px}.proyectos-enlaces{display:flex;gap:3rem}@media(min-width: 768px){.proyectos-enlaces{justify-content:flex-start}}.proyectos-enlaces a{display:flex;align-items:center;gap:1rem;font-size:1.5rem;font-weight:600;margin-top:1.5rem;border:1px solid #1b1c1d;border-radius:2rem;padding:.5rem 1rem;color:#060606;transition:.3s}.proyectos-enlaces a:hover{background-color:#1b1c1d;color:#fff;transition:.3s}.proyectos-enlaces a:hover img,.proyectos-enlaces a:hover p{filter:invert(100%)}.proyectos-enlaces img{width:20px;height:20px}.about{width:95%;max-width:90rem;margin:0 auto}@media(min-width: 768px){.sobre-mi{display:grid;grid-template-columns:repeat(2, 1fr);column-gap:2rem}}.sobre-mi .video-yt #myframe{height:20rem;border-radius:1rem}.sobre-mi .video-yt:nth-child(2){display:flex;flex-direction:column}.sobre-mi .video-yt p{padding-bottom:2rem}@media(min-width: 768px){.sobre-mi .video-yt p{margin:0}.sobre-mi .video-yt h4{margin:0 0 1.5rem 0}}.contact{width:95%;max-width:90rem;margin:0 auto}@media(min-width: 768px){.contenido-contacto{display:grid;grid-template-columns:repeat(2, 1fr);column-gap:2rem}}.formulario{display:flex;flex-direction:column}.formulario input,.formulario textarea{width:100%;padding:1rem;border:solid 1px;border-radius:1rem}.formulario input{height:4rem;margin-bottom:1.5rem}.formulario input[type=submit]{width:15rem;border:1px solid #1b1c1d;border-radius:2rem;padding:.5rem 1rem;transition:.3s;color:#fff;font-weight:700;background-color:#33b66a}.formulario input[type=submit]:hover{background-color:#288e53;color:#fff;transition:.3s}.contacto{margin-bottom:3rem}.info-contacto{display:flex;gap:1rem;margin-bottom:1rem}@media(min-width: 768px){.info-contacto{margin-bottom:3rem}}.info-contacto img{width:32px}.footer{background-color:#1b1c1d;padding:3rem}.footer p{filter:invert(50%)}.footer .contenido-footer{display:flex;flex-direction:column;align-items:center;text-align:center}@media(min-width: 768px){.footer .contenido-footer{display:flex;flex-direction:row;justify-content:space-around}}.footer-enlaces{display:flex;gap:3rem}.footer-enlaces img{width:32px;height:32px;filter:invert(50%)}.switch{--secondary-container: #313033;--primary: #cecfc8;font-size:17px;position:relative;display:inline-block;width:3.6em;height:1.7em}.switch input{display:none;opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#313033;transition:.2s;border-radius:30px}.slider:before{position:absolute;content:"";height:1.3em;width:1.3em;border-radius:20px;left:.2em;bottom:.21em;background-color:#e9c008;transition:.4s}input:checked+.slider::before{background-color:var(--primary)}input:checked+.slider{background-color:var(--secondary-container)}input:focus+.slider{box-shadow:0 0 1px var(--secondary-container)}input:checked+.slider:before{transform:translateX(1.9em)}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
